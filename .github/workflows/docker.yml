name: Docker
on:
  push:
     branches: [ main ]
  pull_request:
     branches: [ main ]
jobs:
  test:
    name: Docker
    runs-on: ubuntu-latest
    steps:

    # OSM website setup
    # derived from https://github.com/openstreetmap/openstreetmap-website/blob/master/.github/workflows/docker.yml
    - name: Checkout OSM Server
      uses: actions/checkout@v2.3.4
      with:
        repository: openstreetmap/openstreetmap-website
        path: osm-website
        
    - name: Show dirs
      run: ls -R

    - name: Go to osm-website directory
      run: cd $GITHUB_WORKSPACE/osm-website

    - name: Poke config
      run: |
        cp config/example.storage.yml config/storage.yml
        cp config/docker.database.yml config/database.yml
        touch config/settings.local.yml

    - name: Build Docker Image
      run: |
        docker-compose build

    - name: Start Docker-Compose
      run: |
        docker-compose up -d
        sleep 15 # let the DB warm up a little

    - name: Prepare Database
      run: |
        docker-compose run --rm web rake db:migrate
        docker-compose run web bundle exec rake i18n:js:export
        docker-compose run --rm web osmosis --rx docker/null-island.osm.xml --wd host=db database=openstreetmap user=openstreetmap password=openstreetmap validateSchemaVersion=no

    - name: Test Basic Website
      run: |
        curl -siL http://127.0.0.1:3000 | egrep '^HTTP/1.1 200 OK'
        curl -siL http://127.0.0.1:3000/api/0.6/node/1 | grep 'Null Island'

    # Create user account
    # derived from https://github.com/openstreetmap/openstreetmap-website/issues/3136
    - name: Create OSM user account
      run: |
        docker-compose run --rm web bundle exec rails runner '
          pass_crypt, pass_salt = PasswordHash.create("testpass")
          admin = User.find_or_create_by(
            :email => "testuser@osm.org",
            :email_valid => true,
            :display_name => "testuser",
            :status => "confirmed",
            :terms_seen => true,
            :terms_agreed => Time.now.getutc,
            :data_public => true,
            :pass_crypt => pass_crypt,
            :pass_salt => pass_salt
          )
          admin.save!'

    # dart OSM API source and setup
    - name: Checkout source
      uses: actions/checkout@v2.3.4
      with:
        path: dart-osm-api

    - name: Go to dart-osm-api directory
      run: cd $GITHUB_WORKSPACE/dart-osm-api

    - name: Install dart
      uses: dart-lang/setup-dart@v1

    - name: Install dependencies
      run: dart pub get

    - name: Analyze project source
      run: dart analyze

    - name: Run dart OSM API tests
      run: dart test
